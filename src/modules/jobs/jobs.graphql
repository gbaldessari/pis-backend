type Job {
  id: Int!
  jobName: String!
  description: String!
  averageRate: Int!
  idCategory: Category!
  idProfessional: User!
  requestsCount: Int!
}

type User {
  id: Int!
  username: String!
  email: String!
  password: String!	
  phone: Int!
  address: String!
}

type Category {
  id: Int!
  categoryName: String!
}

type QueryReturn {
  data: Job!
  success: Boolean!
}

type QueryCategoryReturn {
  data: Category!
  success: Boolean!
}

type QueryByCategoryReturn {
  data: [Job]!
  message: String!
  success: Boolean!
}

type DefaultReturn {
  data: Job!
  message: String!
  success: Boolean!
}

type DefaultCategoryReturn {
  data: Category!
  message: String!
  success: Boolean!

}

type RemoveReturn {
  message: String!
  success: Boolean!
}

input CreateJobInput {
  jobName: String!
  description: String!
  idCategory: Int!
  idProfessional: Int!
}

input CreateCategoryinput {
  name: String!
}

input UpdateJobInput {
  jobName: String
  description: String
  idCategory: Int
  idProfessional: Int
}

type Query {
  jobs: [Job]!
  jobByName(name: String!): QueryReturn!
  jobByCategory(category: String!): QueryByCategoryReturn!
  jobById(id: Int!): QueryReturn!
  categories: [Category]!
  categoryById(id: Int!): QueryCategoryReturn!
  categoryByName(name: String!): QueryCategoryReturn!
}

type Mutation {
  createJob(createJobInput: CreateJobInput!): DefaultReturn!
  updateJob(jobName: String!, updateJobInput: UpdateJobInput!): DefaultReturn!
  removeJob(id: Int!): RemoveReturn!
  createCategory(createCategoryInput: CreateCategoryinput!): DefaultCategoryReturn!
}
