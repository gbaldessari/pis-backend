type Meet {
  id: Int!
  idJob: Job!
  idProfessional: User!
  idUser: User!
  meetDate: String!
  startTime: String!
  endTime: String!
  isDone: Boolean!
}

type Job {
  id: Int!
  jobName: String!
  description: String!
  averageRate: Int!
  idCategory: Category!
  idProfessional: User!
  requestsCount: Int!
}

type Category {
  id: Int!
  categoryName: String!
}

type User {
  id: Int!
  username: String!
  email: String!
  password: String!	
  phone: Int!
  address: String!
  isProfessional: Boolean
}

type QueryMeetReturn {
  data: Meet
  success: Boolean!
}

type RemoveMeetReturn {
  message: String!
  success: Boolean!
}

type DefaultMeetReturn {
  data: Meet
  message: String!
  success: Boolean!
}

input CreateMeetInput {
  idJob: Int!
  meetDate: String!
  startTime: String!
  endTime: String!
}

type Query {
  meets: [Meet]
  meet(id: Int!): QueryMeetReturn!
}

type Mutation {
  createMeet(createMeetInput: CreateMeetInput!): DefaultMeetReturn!
  finishMeet(idMeet: Int!): DefaultMeetReturn!
  removeMeet(id: Int!): RemoveMeetReturn!
}
