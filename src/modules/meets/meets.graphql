type Meet {
  id: Int!
  idJob: Job!
  idProfessional: User!
  idUser: User!
  meetDate: String!
  startTime: String!
  endTime: String!
  isDone: Boolean!
}

type QueryMeetReturn {
  data: Meet
  success: Boolean!
}

type MessageReturn {
  message: String!
  success: Boolean!
}

type DefaultMeetReturn {
  data: Meet
  message: String!
  success: Boolean!
}

input CreateMeetInput {
  idJob: Int!
  meetDate: String!
  startTime: String!
  endTime: String!
}

type Query {
  meets: [Meet]
  meet(id: Int!): QueryMeetReturn!
}

type Mutation {
  createMeet(createMeetInput: CreateMeetInput!): DefaultMeetReturn!
  finishMeet(idMeet: Int!): DefaultMeetReturn!
  removeMeet(id: Int!): MessageReturn!
}
